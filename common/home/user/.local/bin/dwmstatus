#!/bin/sh

while true; do

	# Load Average
	LOAD=$(awk '{print "", $1, $2, $3}' /proc/loadavg)

	# Network Status
	if [ -e /usr/bin/wpa_cli ]; then WPASTATUS=$(wpa_cli status 2>/dev/null); fi
	STATE=$(printf '%s\n' $WPASTATUS | awk -F '=' '/wpa_state/ {print $2}')

	if [ "$STATE" = 'COMPLETED' ]; then
		# Wifi connection info
		SSID=$(printf '%s\n' $WPASTATUS | awk -F '=' '/^ssid/ {print $2}')
		SIGNALSTR=$(wpa_cli signal_poll | awk -F '=' '/^RSSI=/ {printf $2 "dBm/"} /^LINKSPEED=/ {print $2 "mbps"}')
		NET="${SSID:+$SSID}${SIGNALSTR:+ $SIGNALSTR}"
	elif [ -z "$STATE" ]; then
		# Generic info
		DEV=$(ip link | awk -F ': ' '/state UP/ {print $2}')
		NET=$(ip addr show dev $DEV | awk '/inet / {print $7 ":" $2}')
	else
		# Wifi attempting to connect info
		NET=$STATE
	fi

	# Power Status
	if [ -d /sys/class/power_supply/BAT1 ]; then
		read -r AC </sys/class/power_supply/AC/online
		read -r BAT0 </sys/class/power_supply/BAT0/capacity
		read -r BAT1 </sys/class/power_supply/BAT1/capacity
		POWER="$BAT1[$AC]$BAT0"
	elif [ -d /sys/class/power_supply/BAT0 ]; then
		read -r AC </sys/class/power_supply/AC/online
		read -r BAT0 </sys/class/power_supply/BAT0/capacity
		POWER="[$AC]$BAT0"
	else
		POWER="<==+==>"
	fi

	# Date and Time
	CLOCK=$(date '+%b %m/%d %a %H%M')

	# Overall output command
	xsetroot -name "$LOAD | $NET | $POWER | $CLOCK"

	sleep 10

done
